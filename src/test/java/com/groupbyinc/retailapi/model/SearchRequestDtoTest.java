/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.groupbyinc.retailapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.groupbyinc.retailapi.model.BiasingProfileDto;
import com.groupbyinc.retailapi.model.CustomParameterDto;
import com.groupbyinc.retailapi.model.SearchRequestDtoOverwrites;
import com.groupbyinc.retailapi.model.SelectedRefinementDto;
import com.groupbyinc.retailapi.model.SortDto;
import com.groupbyinc.retailapi.model.SpellCorrectionMode;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SearchRequestDto
 */
public class SearchRequestDtoTest {
    private final SearchRequestDto model = new SearchRequestDto();

    /**
     * Model tests for SearchRequestDto
     */
    @Test
    public void testSearchRequestDto() {
        // TODO: test SearchRequestDto
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'area'
     */
    @Test
    public void areaTest() {
        // TODO: test area
    }

    /**
     * Test the property 'collection'
     */
    @Test
    public void collectionTest() {
        // TODO: test collection
    }

    /**
     * Test the property 'visitorId'
     */
    @Test
    public void visitorIdTest() {
        // TODO: test visitorId
    }

    /**
     * Test the property 'refinements'
     */
    @Test
    public void refinementsTest() {
        // TODO: test refinements
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'skip'
     */
    @Test
    public void skipTest() {
        // TODO: test skip
    }

    /**
     * Test the property 'biasingProfile'
     */
    @Test
    public void biasingProfileTest() {
        // TODO: test biasingProfile
    }

    /**
     * Test the property 'biasing'
     */
    @Test
    public void biasingTest() {
        // TODO: test biasing
    }

    /**
     * Test the property 'customUrlParams'
     */
    @Test
    public void customUrlParamsTest() {
        // TODO: test customUrlParams
    }

    /**
     * Test the property 'sorts'
     */
    @Test
    public void sortsTest() {
        // TODO: test sorts
    }

    /**
     * Test the property 'includedNavigations'
     */
    @Test
    public void includedNavigationsTest() {
        // TODO: test includedNavigations
    }

    /**
     * Test the property 'excludedNavigations'
     */
    @Test
    public void excludedNavigationsTest() {
        // TODO: test excludedNavigations
    }

    /**
     * Test the property 'dynamicFacet'
     */
    @Test
    public void dynamicFacetTest() {
        // TODO: test dynamicFacet
    }

    /**
     * Test the property 'variantRollupKeys'
     */
    @Test
    public void variantRollupKeysTest() {
        // TODO: test variantRollupKeys
    }

    /**
     * Test the property 'preFilter'
     */
    @Test
    public void preFilterTest() {
        // TODO: test preFilter
    }

    /**
     * Test the property 'site'
     */
    @Test
    public void siteTest() {
        // TODO: test site
    }

    /**
     * Test the property 'responseMask'
     */
    @Test
    public void responseMaskTest() {
        // TODO: test responseMask
    }

    /**
     * Test the property 'pageCategories'
     */
    @Test
    public void pageCategoriesTest() {
        // TODO: test pageCategories
    }

    /**
     * Test the property 'spellCorrectionMode'
     */
    @Test
    public void spellCorrectionModeTest() {
        // TODO: test spellCorrectionMode
    }

    /**
     * Test the property 'includeExpandedResults'
     */
    @Test
    public void includeExpandedResultsTest() {
        // TODO: test includeExpandedResults
    }

    /**
     * Test the property 'pinUnexpandedResults'
     */
    @Test
    public void pinUnexpandedResultsTest() {
        // TODO: test pinUnexpandedResults
    }

    /**
     * Test the property 'debug'
     */
    @Test
    public void debugTest() {
        // TODO: test debug
    }

    /**
     * Test the property 'facetLimit'
     */
    @Test
    public void facetLimitTest() {
        // TODO: test facetLimit
    }

    /**
     * Test the property 'loginId'
     */
    @Test
    public void loginIdTest() {
        // TODO: test loginId
    }

    /**
     * Test the property 'overwrites'
     */
    @Test
    public void overwritesTest() {
        // TODO: test overwrites
    }

}
