/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.groupbyinc.retailapi.api;

import com.groupbyinc.retailapi.ApiCallback;
import com.groupbyinc.retailapi.ApiClient;
import com.groupbyinc.retailapi.ApiException;
import com.groupbyinc.retailapi.ApiResponse;
import com.groupbyinc.retailapi.Configuration;
import com.groupbyinc.retailapi.Pair;
import com.groupbyinc.retailapi.ProgressRequestBody;
import com.groupbyinc.retailapi.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.groupbyinc.retailapi.model.ErrorDto;
import com.groupbyinc.retailapi.model.ProductDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProductApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProductApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getByProductIds
     * @param collection Collection name (required)
     * @param productId Product ID which need to be search (required)
     * @param xGroupbyCustomerId Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. (required)
     * @param variantIds Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Product is found. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getByProductIdsCall(String collection, String productId, String xGroupbyCustomerId, List<String> variantIds, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://search.{environment}.groupbycloud.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/search/product";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (collection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collection", collection));
        }

        if (productId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("productId", productId));
        }

        if (variantIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "variantIds", variantIds));
        }

        if (xGroupbyCustomerId != null) {
            localVarHeaderParams.put("X-Groupby-Customer-Id", localVarApiClient.parameterToString(xGroupbyCustomerId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "GroupByIncEmployee", "ClientKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getByProductIdsValidateBeforeCall(String collection, String productId, String xGroupbyCustomerId, List<String> variantIds, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'collection' is set
        if (collection == null) {
            throw new ApiException("Missing the required parameter 'collection' when calling getByProductIds(Async)");
        }

        // verify the required parameter 'productId' is set
        if (productId == null) {
            throw new ApiException("Missing the required parameter 'productId' when calling getByProductIds(Async)");
        }

        // verify the required parameter 'xGroupbyCustomerId' is set
        if (xGroupbyCustomerId == null) {
            throw new ApiException("Missing the required parameter 'xGroupbyCustomerId' when calling getByProductIds(Async)");
        }

        return getByProductIdsCall(collection, productId, xGroupbyCustomerId, variantIds, _callback);

    }

    /**
     * Provided product search functionality
     * Perform a product search against the GroupBy Retail Search API.
     * @param collection Collection name (required)
     * @param productId Product ID which need to be search (required)
     * @param xGroupbyCustomerId Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. (required)
     * @param variantIds Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     * @return ProductDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Product is found. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public ProductDto getByProductIds(String collection, String productId, String xGroupbyCustomerId, List<String> variantIds) throws ApiException {
        ApiResponse<ProductDto> localVarResp = getByProductIdsWithHttpInfo(collection, productId, xGroupbyCustomerId, variantIds);
        return localVarResp.getData();
    }

    /**
     * Provided product search functionality
     * Perform a product search against the GroupBy Retail Search API.
     * @param collection Collection name (required)
     * @param productId Product ID which need to be search (required)
     * @param xGroupbyCustomerId Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. (required)
     * @param variantIds Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     * @return ApiResponse&lt;ProductDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Product is found. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProductDto> getByProductIdsWithHttpInfo(String collection, String productId, String xGroupbyCustomerId, List<String> variantIds) throws ApiException {
        okhttp3.Call localVarCall = getByProductIdsValidateBeforeCall(collection, productId, xGroupbyCustomerId, variantIds, null);
        Type localVarReturnType = new TypeToken<ProductDto>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Provided product search functionality (asynchronously)
     * Perform a product search against the GroupBy Retail Search API.
     * @param collection Collection name (required)
     * @param productId Product ID which need to be search (required)
     * @param xGroupbyCustomerId Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. (required)
     * @param variantIds Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Product is found. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getByProductIdsAsync(String collection, String productId, String xGroupbyCustomerId, List<String> variantIds, final ApiCallback<ProductDto> _callback) throws ApiException {

        okhttp3.Call localVarCall = getByProductIdsValidateBeforeCall(collection, productId, xGroupbyCustomerId, variantIds, _callback);
        Type localVarReturnType = new TypeToken<ProductDto>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
