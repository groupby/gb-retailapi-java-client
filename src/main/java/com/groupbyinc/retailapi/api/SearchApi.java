/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.groupbyinc.retailapi.api;

import com.groupbyinc.retailapi.ApiCallback;
import com.groupbyinc.retailapi.ApiClient;
import com.groupbyinc.retailapi.ApiException;
import com.groupbyinc.retailapi.ApiResponse;
import com.groupbyinc.retailapi.Configuration;
import com.groupbyinc.retailapi.Pair;
import com.groupbyinc.retailapi.ProgressRequestBody;
import com.groupbyinc.retailapi.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.groupbyinc.retailapi.model.ErrorDto;
import com.groupbyinc.retailapi.model.FacetSearchRequestDto;
import com.groupbyinc.retailapi.model.FacetSearchResponseDto;
import com.groupbyinc.retailapi.model.SearchRequestDto;
import com.groupbyinc.retailapi.model.SearchResponseDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SearchApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SearchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SearchApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for facetSearch
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param facetSearchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful facet search response. Contains original request and navigation with relevant facet keys. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call facetSearchCall(String xGroupbyCustomerId, FacetSearchRequestDto facetSearchRequestDto, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://search.{environment}.groupbycloud.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = facetSearchRequestDto;

        // create path and map variables
        String localVarPath = "/api/search/facet";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xGroupbyCustomerId != null) {
            localVarHeaderParams.put("X-Groupby-Customer-Id", localVarApiClient.parameterToString(xGroupbyCustomerId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "GroupByIncEmployee", "ClientKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call facetSearchValidateBeforeCall(String xGroupbyCustomerId, FacetSearchRequestDto facetSearchRequestDto, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xGroupbyCustomerId' is set
        if (xGroupbyCustomerId == null) {
            throw new ApiException("Missing the required parameter 'xGroupbyCustomerId' when calling facetSearch(Async)");
        }

        // verify the required parameter 'facetSearchRequestDto' is set
        if (facetSearchRequestDto == null) {
            throw new ApiException("Missing the required parameter 'facetSearchRequestDto' when calling facetSearch(Async)");
        }

        return facetSearchCall(xGroupbyCustomerId, facetSearchRequestDto, _callback);

    }

    /**
     * Provided search functionality
     * Perform a facet search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param facetSearchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. (required)
     * @return FacetSearchResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful facet search response. Contains original request and navigation with relevant facet keys. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public FacetSearchResponseDto facetSearch(String xGroupbyCustomerId, FacetSearchRequestDto facetSearchRequestDto) throws ApiException {
        ApiResponse<FacetSearchResponseDto> localVarResp = facetSearchWithHttpInfo(xGroupbyCustomerId, facetSearchRequestDto);
        return localVarResp.getData();
    }

    /**
     * Provided search functionality
     * Perform a facet search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param facetSearchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. (required)
     * @return ApiResponse&lt;FacetSearchResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful facet search response. Contains original request and navigation with relevant facet keys. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<FacetSearchResponseDto> facetSearchWithHttpInfo(String xGroupbyCustomerId, FacetSearchRequestDto facetSearchRequestDto) throws ApiException {
        okhttp3.Call localVarCall = facetSearchValidateBeforeCall(xGroupbyCustomerId, facetSearchRequestDto, null);
        Type localVarReturnType = new TypeToken<FacetSearchResponseDto>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Provided search functionality (asynchronously)
     * Perform a facet search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param facetSearchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful facet search response. Contains original request and navigation with relevant facet keys. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call facetSearchAsync(String xGroupbyCustomerId, FacetSearchRequestDto facetSearchRequestDto, final ApiCallback<FacetSearchResponseDto> _callback) throws ApiException {

        okhttp3.Call localVarCall = facetSearchValidateBeforeCall(xGroupbyCustomerId, facetSearchRequestDto, _callback);
        Type localVarReturnType = new TypeToken<FacetSearchResponseDto>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for search
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param searchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Search was accepted and a normal response could be generated. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchCall(String xGroupbyCustomerId, SearchRequestDto searchRequestDto, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://search.{environment}.groupbycloud.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = searchRequestDto;

        // create path and map variables
        String localVarPath = "/api/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xGroupbyCustomerId != null) {
            localVarHeaderParams.put("X-Groupby-Customer-Id", localVarApiClient.parameterToString(xGroupbyCustomerId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "GroupByIncEmployee", "ClientKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchValidateBeforeCall(String xGroupbyCustomerId, SearchRequestDto searchRequestDto, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xGroupbyCustomerId' is set
        if (xGroupbyCustomerId == null) {
            throw new ApiException("Missing the required parameter 'xGroupbyCustomerId' when calling search(Async)");
        }

        // verify the required parameter 'searchRequestDto' is set
        if (searchRequestDto == null) {
            throw new ApiException("Missing the required parameter 'searchRequestDto' when calling search(Async)");
        }

        return searchCall(xGroupbyCustomerId, searchRequestDto, _callback);

    }

    /**
     * Provided search functionality
     * Perform a search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param searchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. (required)
     * @return SearchResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Search was accepted and a normal response could be generated. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public SearchResponseDto search(String xGroupbyCustomerId, SearchRequestDto searchRequestDto) throws ApiException {
        ApiResponse<SearchResponseDto> localVarResp = searchWithHttpInfo(xGroupbyCustomerId, searchRequestDto);
        return localVarResp.getData();
    }

    /**
     * Provided search functionality
     * Perform a search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param searchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. (required)
     * @return ApiResponse&lt;SearchResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Search was accepted and a normal response could be generated. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SearchResponseDto> searchWithHttpInfo(String xGroupbyCustomerId, SearchRequestDto searchRequestDto) throws ApiException {
        okhttp3.Call localVarCall = searchValidateBeforeCall(xGroupbyCustomerId, searchRequestDto, null);
        Type localVarReturnType = new TypeToken<SearchResponseDto>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Provided search functionality (asynchronously)
     * Perform a search against the GroupBy Retail Search API.
     * @param xGroupbyCustomerId Custom HTTP header which may contain tenant name. Used to define a client by its name. (required)
     * @param searchRequestDto Request that should be populated to configure a search API call, made by the client on behalf of a shopper. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Search was accepted and a normal response could be generated. </td><td>  * Content-Type - In responses, a Content-Type header provides the client with the actual content type of the returned content. <br>  * Date - The Date general HTTP header contains the date and time at which the message was originated. <br>  * Content-Length - The Content-Length header indicates the size of the message body, in bytes, sent to the recipient. <br>  * Connection - The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done. <br>  </td></tr>
        <tr><td> 400 </td><td> Client has made a bad request, usually a validation constraint has been violated. See the message for further information. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Client is not authorized to perform the requested operation. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> There was an internal error processing the search request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchAsync(String xGroupbyCustomerId, SearchRequestDto searchRequestDto, final ApiCallback<SearchResponseDto> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchValidateBeforeCall(xGroupbyCustomerId, searchRequestDto, _callback);
        Type localVarReturnType = new TypeToken<SearchResponseDto>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
