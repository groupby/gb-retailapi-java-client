/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.groupbyinc.retailapi.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Define type of content which is can be stored in zone.
 */
@JsonAdapter(ZoneDtoType.Adapter.class)
public enum ZoneDtoType {
  
  CONTENT("Content"),
  
  RICH_CONTENT("Rich_Content"),
  
  PRODUCTS("Products"),
  
  GENERATED_CONTENT("Generated_Content");

  private String value;

  ZoneDtoType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ZoneDtoType fromValue(String value) {
    for (ZoneDtoType b : ZoneDtoType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ZoneDtoType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ZoneDtoType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ZoneDtoType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ZoneDtoType.fromValue(value);
    }
  }
}

